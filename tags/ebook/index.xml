<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ebook on mitakeck.github.io</title>
    <link>http://mitakeck.github.io/tags/ebook/</link>
    <description>Recent content in ebook on mitakeck.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 06 Mar 2017 02:31:37 +0900</lastBuildDate><atom:link href="http://mitakeck.github.io/tags/ebook/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Oreilly の無料本を自動で入手する方法</title>
      <link>http://mitakeck.github.io/oreilly-free-ebooks-dl/</link>
      <pubDate>Mon, 06 Mar 2017 02:31:37 +0900</pubDate>
      
      <guid>http://mitakeck.github.io/oreilly-free-ebooks-dl/</guid>
      <description>概要 freebora という Oreilly の無料電子書籍をダウンロードするコマンドラインツールがある。 Python で書かれており、ソースコードは Github で公開されている。
電子書籍のダウンロードロジックが気になったので、ソースコードを探索してみた。
 ソースコード探索 探索と言っても重要な部分は freebora/freebora/freebora.py 内にすべてまとまっていて、大まかに以下の流れで無料電子書籍を抽出/ダウンロードしていた。
   http://shop.oreilly.com/category/ebooks.do にアクセスしカテゴリ一覧を取得    http://shop.oreilly.com/category/ebooks/[category].do にアクセスし電子書籍一覧を取得    値段が $0.00 に設定されている電子書籍ページ URL を抽出    対象電子書籍ページの URL を整形して、ダウンロード    処理 4. のダウンロード URL 整形処理に関してだけ補足。
以下に freebora から抜粋したソースコードを掲載する。
ソースコード内の for 内部が処理 4 となる。 重要なのは re.sub() で、それぞれの URL を .csp を .pdf に/free/ を /free/files/ に置換する処理を行っている。
... # https://github.com/deeplook/freebora/blob/master/freebora/freebora.py#L56-L73 より引用 t2 = etree.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Ebook on My New Hugo Site </title>
    <link>localhost:1313</link>
    <language>en-us</language>
    <author>Alexander Ivanov</author>
    <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>
    
    <item>
      <title>Oreilly の無料本を自動で入手する方法</title>
      <link>localhost:1313</link>
      <pubDate>Mon, 06 Mar 2017 02:31:37 JST</pubDate>
      <author>Alexander Ivanov</author>
      <guid>localhost:1313</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/deeplook/freebora&#34;&gt;freebora&lt;/a&gt; という Oreilly の無料電子書籍をダウンロードするコマンドラインツールがある。
Python で書かれており、ソースコードは Github で公開されている。&lt;br /&gt;
電子書籍のダウンロードロジックが気になったので、ソースコードを探索してみた。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;ソースコード探索&#34;&gt;ソースコード探索&lt;/h2&gt;

&lt;p&gt;探索と言っても重要な部分は  &lt;a href=&#34;https://github.com/deeplook/freebora/blob/master/freebora/freebora.py&#34;&gt;&lt;code&gt;freebora/freebora/freebora.py&lt;/code&gt;&lt;/a&gt; 内にすべてまとまっていて、大まかに以下の流れで無料電子書籍を抽出/ダウンロードしていた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. &lt;code&gt;http://shop.oreilly.com/category/ebooks.do&lt;/code&gt; にアクセスしカテゴリ一覧を取得&lt;/li&gt;
&lt;li&gt;2. &lt;code&gt;http://shop.oreilly.com/category/ebooks/[category].do&lt;/code&gt; にアクセスし電子書籍一覧を取得&lt;/li&gt;
&lt;li&gt;3. 値段が &lt;code&gt;$0.00&lt;/code&gt; に設定されている電子書籍ページ URL を抽出&lt;/li&gt;
&lt;li&gt;4. 対象電子書籍ページの URL を整形して、ダウンロード&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;処理 4. のダウンロード URL 整形処理に関してだけ補足。&lt;/p&gt;

&lt;p&gt;以下に &lt;code&gt;freebora&lt;/code&gt; から抜粋したソースコードを掲載する。&lt;br /&gt;
ソースコード内の &lt;code&gt;for&lt;/code&gt; 内部が処理 4 となる。
重要なのは &lt;code&gt;re.sub()&lt;/code&gt; で、それぞれの URL を &lt;code&gt;.csp&lt;/code&gt; を &lt;code&gt;.pdf&lt;/code&gt; に&lt;code&gt;/free/&lt;/code&gt; を &lt;code&gt;/free/files/&lt;/code&gt; に置換する処理を行っている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;# https://github.com/deeplook/freebora/blob/master/freebora/freebora.py#L56-L73 より引用&lt;/span&gt;
t2 &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; etree&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;parse(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;http://shop.oreilly.com&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;+&lt;/span&gt; page_url, parser&lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt;p)
xp &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;//span[@class=&amp;quot;price&amp;quot;][contains(., &amp;quot;$0.00&amp;quot;)]/&amp;#39;&lt;/span&gt;\
     &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;../../../../div[@class=&amp;quot;thumbheader&amp;quot;]/a/@href&amp;#39;&lt;/span&gt;
paths &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; t2&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;xpath(xp)
&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;for&lt;/span&gt; j, path &lt;span style=&#34;color: #000000; font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #336666&#34;&gt;enumerate&lt;/span&gt;(paths):
    url &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;http://shop.oreilly.com&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;+&lt;/span&gt; path
    html &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;get(url)&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;text
    url_csps &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;path_info\:\s+(.*?\.csp)&amp;#39;&lt;/span&gt;, html)
    &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #336666&#34;&gt;len&lt;/span&gt;(url_csps) &lt;span style=&#34;color: #555555&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #FF6600&#34;&gt;1&lt;/span&gt;:
        &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;continue&lt;/span&gt;
    url_csp &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; url_csps[&lt;span style=&#34;color: #FF6600&#34;&gt;0&lt;/span&gt;]
    url_csp &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;sub(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;\?.*&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, url_csp)
    url_pdf &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;sub(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;\.csp&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;.pdf&amp;#39;&lt;/span&gt;, url_csp)
    url_pdf &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;sub(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;/free/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;/free/files/&amp;#39;&lt;/span&gt;, url_pdf)
    u &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;http://www.oreilly.com/&lt;/span&gt;&lt;span style=&#34;color: #AA0000&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;%&lt;/span&gt; url_pdf
    &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;if&lt;/span&gt; verbose:
        &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;print&lt;/span&gt;(u)
    &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;yield&lt;/span&gt; u
&lt;span style=&#34;color: #555555&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実際の無料電子書籍 URL から手動で上記処理 4 を実行してみる。&lt;/p&gt;

&lt;p&gt;下記 URL は『Guidelines for Keeping Pace with Innovation and Tech Adoption』という電子書籍のページ。こいつに対してさっきの置換処理を実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.oreilly.com/business/free/guidelines-for-keeping-pace-with-innovation-and-tech-adoption.csp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;すると対象電子書籍の PDF を閲覧することが出来る URL が生成される。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.oreilly.com/business/free/files/guidelines-for-keeping-pace-with-innovation-and-tech-adoption.pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;気づき&#34;&gt;気づき&lt;/h2&gt;

&lt;h4 id=&#34;1-http-www-oreilly-com-category-free-からスクレイプしたほうが早い&#34;&gt;1. &lt;code&gt;http://www.oreilly.com/[category]/free/&lt;/code&gt; からスクレイプしたほうが早い&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;category = {&amp;quot;business&amp;quot;, &amp;quot;data&amp;quot;, &amp;quot;iot&amp;quot;, &amp;quot;design&amp;quot;, &amp;quot;programming&amp;quot;, &amp;quot;security&amp;quot;, &amp;quot;web-platform&amp;quot;, &amp;quot;webops&amp;quot;}&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-pdf-以外のフォーマットもダウンロードできる&#34;&gt;2. PDF 以外のフォーマットもダウンロードできる&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;.pdf&lt;/code&gt; 以外にも &lt;code&gt;.epub&lt;/code&gt;, &lt;code&gt;.mobi&lt;/code&gt; フォーマットの存在を確認した。&lt;/p&gt;

&lt;h2 id=&#34;参考-url-等&#34;&gt;参考 URL 等&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/deeplook/freebora&#34;&gt;https://github.com/deeplook/freebora&lt;/a&gt; : Download free ebooks from O&amp;rsquo;Reilly.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

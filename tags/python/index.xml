<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on mitakeck.github.io</title>
    <link>http://mitakeck.github.io/tags/python/</link>
    <description>Recent content in python on mitakeck.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sun, 30 Apr 2017 16:40:01 +0900</lastBuildDate><atom:link href="http://mitakeck.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure の Text-to-Speech API 使ってみる</title>
      <link>http://mitakeck.github.io/bing-text-to-speech-api/</link>
      <pubDate>Sun, 30 Apr 2017 16:40:01 +0900</pubDate>
      
      <guid>http://mitakeck.github.io/bing-text-to-speech-api/</guid>
      <description>Azure のText-to-Speech API 使ってみる 概要 Text-to_Speech とは文字データから合成発声データを作成する技術のことである
基本的には Microsoft の Cognitive Services の API リファレンス に従って API を叩けばできるが、音声データ作成処理に手間取ったりしたのでメモ書きとして残しておく
Cognitive Service を Python から叩くことを想定している
一連の流れをまとめたファイルは以下から閲覧できる https://gist.github.com/mitakeck/b2a953dfdf84b1e2c0d3c950d812ad0f
アクセストークンを取得する なんか知らないけど、Cognitive Searvice のサブスクリプションキーを Azure で発行した後に、アクセストークンを取得しないといけないらしい
Header に Ocp-Apim-Subscription-Key をキーとして、サブスクリプションキーを挿入して https://api.cognitive.microsoft.com/sts/v1.0/issueToken へ　POST すると返却値にアクセストークンが渡ってくる
ここで取得したアクセストークンは音声データを作成する際に使いまわすものになる
subscription_key = &amp;#34;&amp;lt; サブスクリプションキー &amp;gt;&amp;#34; headers = {  &amp;#34;Content-type&amp;#34;: &amp;#34;application/x-www-form-urlencoded&amp;#34;,  &amp;#34;Ocp-Apim-Subscription-Key&amp;#34;: subscription_key } access_token_host = &amp;#34;api.cognitive.microsoft.com&amp;#34; path = &amp;#34;/sts/v1.0/issueToken&amp;#34;  conn = http.client.HTTPSConnection(access_token_host) conn.request(&amp;#34;POST&amp;#34;, path, params, headers) response = conn.</description>
    </item>
    
    <item>
      <title>文字画像からフォントを推定する</title>
      <link>http://mitakeck.github.io/cnn-font-analyzer/</link>
      <pubDate>Sun, 12 Mar 2017 14:45:51 +0900</pubDate>
      
      <guid>http://mitakeck.github.io/cnn-font-analyzer/</guid>
      <description>文字画像からフォントを推定したい 吊り広告や看板に使われているフォントがどういうフォントなのか気になるときがある。
そんなとき画像から使用されているフォントを推定してくれる Web サービスやシステムはいくつかある。
それらがどういうロジックでフォントを推定しているのかは分からないが、なんとなく作りたくなったので自作してみることにする。
今回は手始めに 10 種類のフォントを用いて、画像の中に写った文字を見てフォントを推定する仕組みを畳み込みニューラルネットワークを用いて作成してみる。
概要  入力は文字が書かれた画像データ  画像サイズは 64x64 画像中には 1 文字だけ描画   出力は推定した文字のフォント  ただし 推定は以下 10 個のフォントの中から行う futura, gillsans, helvetica, opitma, andalemono, arial, impact, timenewroman, trebuchetms, verdana    学習データの準備 なにはともあれとりあえず学習データを用意する。
今回は学習データとして文字画像とその正解ラベルがあればいいので指定のフォントで文字が描画された画像を大量に用意する。
その際 ImageMagick を用いるとだいぶ楽ができる。
ImageMagick で画像を一括生成 ImageMagick で指定フォントの文字画像を出力するには font と label オプションを最低限指定してやれば良い
 -font にはフォントを指定 label には描画したい文字を指定 output には出力先の画像ファイル名を指定  $ convert -background white -fill black -size 64x64 -gravity center -font [font] label:[label] [output] あと出力される画像の見栄えの調節用オプションとして background, fill, size, gravity 等がある。</description>
    </item>
    
  </channel>
</rss>
